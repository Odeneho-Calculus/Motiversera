@use '../../styles/variables' as *;
@use '../../styles/mixins' as *;

.base {
    @include flex-center(8px);
    border-radius: $radius-2;
    padding: 10px 14px;
    font-weight: 500;
    border: 1px solid $color-border;
    background: rgba($color-surface, 0.8);
    color: $color-text;
    cursor: pointer;
    transition: all 0.2s ease;
    text-decoration: none;
    font-family: inherit;
    white-space: nowrap;
    min-width: 0; // Prevent overflow
    box-sizing: border-box;
    text-overflow: ellipsis;
    overflow: hidden;

    // Responsive adjustments for narrow containers
    @container (max-width: 350px) {
        padding: 8px 10px;
        font-size: 12px;
        gap: 6px;
    }

    @container (max-width: 280px) {
        padding: 6px 8px;
        font-size: 11px;
        gap: 4px;
        min-height: 28px;
    }

    &:hover {
        transform: translateY(-1px);
        background: rgba($color-surface, 0.9);
        border-color: rgba($color-border, 0.8);
    }

    &:active {
        transform: translateY(0);
    }

    &:focus-visible {
        outline: 2px solid $color-primary;
        outline-offset: 2px;
    }
}

.primary {
    background: linear-gradient(135deg, $color-primary, $color-accent);
    color: white;
    border-color: transparent;
    font-weight: 600;
    box-shadow: 0 4px 12px rgba($color-primary, 0.25);

    &:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 16px rgba($color-primary, 0.35);
        filter: brightness(1.1);
    }

    &:active {
        transform: translateY(-1px);
        box-shadow: 0 3px 8px rgba($color-primary, 0.3);
    }
}

.outline {
    background: transparent;
    border-color: rgba($color-border, 0.6);
    backdrop-filter: blur(8px);

    &:hover {
        background: rgba($color-text, 0.05);
        border-color: $color-border;
    }

    &:active {
        background: rgba($color-text, 0.08);
    }
}

.subtle {
    background: rgba($color-surface, 0.5);
    border-color: transparent;

    &:hover {
        background: rgba($color-surface, 0.8);
    }

    &:active {
        background: rgba($color-surface, 0.9);
    }
}

.sm {
    padding: 8px 12px;
    font-size: 13px;
    border-radius: 8px;
    min-height: 32px;

    @container (max-width: 350px) {
        padding: 6px 8px;
        font-size: 11px;
        min-height: 28px;
    }

    @container (max-width: 280px) {
        padding: 4px 6px;
        font-size: 10px;
        min-height: 24px;
    }
}

.md {
    padding: 10px 16px;
    font-size: 14px;
    min-height: 40px;

    @container (max-width: 350px) {
        padding: 8px 12px;
        font-size: 12px;
        min-height: 36px;
    }

    @container (max-width: 280px) {
        padding: 6px 10px;
        font-size: 11px;
        min-height: 32px;
    }
}

.lg {
    padding: 14px 24px;
    font-size: 16px;
    font-weight: 600;
    border-radius: 12px;
    min-height: 48px;

    @container (max-width: 350px) {
        padding: 10px 16px;
        font-size: 14px;
        min-height: 44px;
    }

    @container (max-width: 280px) {
        padding: 8px 12px;
        font-size: 12px;
        min-height: 40px;
    }
}

// Light theme overrides
:root[data-theme='light'] {
    .base {
        background: rgba(255, 255, 255, 0.8);
        border-color: rgba(0, 0, 0, 0.08);
        color: #374151;

        &:hover {
            background: rgba(255, 255, 255, 0.9);
            border-color: rgba(0, 0, 0, 0.12);
        }
    }

    .outline {
        background: transparent;
        border-color: rgba(0, 0, 0, 0.1);

        &:hover {
            background: rgba(0, 0, 0, 0.02);
            border-color: rgba(0, 0, 0, 0.15);
        }

        &:active {
            background: rgba(0, 0, 0, 0.04);
        }
    }

    .subtle {
        background: rgba(243, 244, 246, 0.5);

        &:hover {
            background: rgba(243, 244, 246, 0.8);
        }

        &:active {
            background: rgba(243, 244, 246, 0.9);
        }
    }
}